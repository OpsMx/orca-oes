name: Branch Publish Fiat & Build Orca

on:
  workflow_call:
  push:
    branches:
    - OES-1.30.x
 
env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx6g -Xms6g
  CONTAINER_REGISTRY: quay.io/opsmxpublic

jobs:

 publish-fiat:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout OpsMx Fiat repo
        uses: actions/checkout@v2
        with:
         repository: opsmx/fiat-oes
         ref: refs/heads/OES-1.30.x
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Build
        env:
          NEXUS_VERSION: 1-0-SNAPSHOT
        run: |
            
              cat <<EOF>> patch
              
              version = "$NEXUS_VERSION"
              group = 'io.spinnaker.fiat'
              apply plugin: 'maven-publish'

              publishing{
                   publications{
                       maven(MavenPublication){
                            groupId = 'io.spinnaker.fiat'
                            artifactId = 'NEXUSARTIID'
                            version = "$NEXUS_VERSION"
                            from components.java
                 pom {
                   name = 'NEXUSARTIID'
                   description = 'A description of my library'
                   }
                 }
              }

              repositories {
                 maven{
                 name = 'nexus'
                 url "https://nexus.opsmx.net/repository/maven-snapshots/"
                  credentials {
                    username = "${{ secrets.NEXUS_USERNAME }}"
                    password = "${{ secrets.NEXUS_PASSWORD }}"
                         }
                     }
                }
               }  
                               tasks.withType(GenerateModuleMetadata).configureEach {
                                         suppressedValidationErrors.add('enforced-platform')
                                       }

              EOF
     
              ls -d */  | grep "fiat" | sed 's/\///g' > ds.txt
              cat ds.txt
              for i in $(cat ds.txt) 
              do
               sed  s/NEXUSARTIID/$i/g patch > patchnew
               cat patchnew >> $i/$i.gradle  
              done
           
              sed -e '/components\.java/ s/^#*/\/\//' -i fiat-bom/fiat-bom.gradle
                ./gradlew --no-daemon -PenableCrossCompilerPlugin=true  publish -x test

 branch-build:
    runs-on: ubuntu-latest
    needs: [publish-fiat]
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Prepare build variables
        id: build_variables
        run: |
          echo ::set-output name=REPO::ubi8-orca-cve
          echo ::set-output name=VERSION::"$(git rev-parse --short HEAD)-$(date --utc +'%Y%m%d%H%M')"
      - name: Login to Quay
        uses: docker/login-action@v1
        # use service account flow defined at: https://github.com/docker/login-action#service-account-based-authentication-1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_KEY }}

      - name: Build
        env:
          ORG_GRADLE_PROJECT_version: ${{ steps.build_variables.outputs.VERSION }}
        run: ./gradlew --no-build-cache --no-daemon -PenableCrossCompilerPlugin=true orca-web:installDist -x test 

      - name: dockerBuildpush
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/ubi8/Dockerfile-fips
          push: true
          tags: |
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}" 
      - name: dockerBuildpushjaeger
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/ubi8/Dockerfile-dev
          push: true
          tags: |
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}-dev"                
